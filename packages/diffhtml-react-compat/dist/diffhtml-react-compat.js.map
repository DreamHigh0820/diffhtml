{"version":3,"file":"diffhtml-react-compat.js","sources":["../src/index.js"],"sourcesContent":["import { createTree, innerHTML, outerHTML, use, html } from 'diffhtml';\nimport syntheticEvents from 'diffhtml-middleware-synthetic-events';\n\nconst { assign, freeze, keys } = Object;\n\nlet NodeCache = null;\nlet ComponentCache = new Map();\nlet reactFlow = [];\n\nconst reconcileComponents = (oldTree, newTree) => {\n  // Stateful components have a very limited API, designed to be fully\n  // implemented by a higher-level abstraction. The only method ever called\n  // is `render`. It is up to a higher level abstraction on how to handle the\n  // changes.\n  for (let i = 0; i < newTree.childNodes.length; i++) {\n    const oldChild = oldTree && oldTree.childNodes[i];\n    const newChild = newTree.childNodes[i];\n\n    // If no new child return.\n    if (!newChild) {\n      newTree.childNodes.splice(i, 1);\n      i--;\n      continue;\n    }\n\n    // If incoming tree is a component, flatten down to tree for now.\n    if (newChild && typeof newChild.rawNodeName === 'function') {\n      const oldChildNodes = oldTree && oldTree.childNodes;\n      const oldCtor = oldChild && oldChild.rawNodeName;\n      const newCtor = newChild.rawNodeName;\n      const children = newChild.childNodes.length ? newChild.childNodes.filter(Boolean) : null;\n      const props = assign({}, newChild.attributes, { children });\n      const canNew = newCtor.prototype && newCtor.prototype.render;\n\n      // If the component has already been initialized, we can reuse it.\n      const oldInstance = oldCtor === newCtor && ComponentCache.get(oldChild);\n      const newInstance = !oldInstance && canNew && new newCtor(props);\n      const instance = oldInstance || newInstance;\n\n      // See if we should update.\n      const shouldUpdate = instance && instance.shouldComponentUpdate(\n        instance.props, instance.state\n      );\n\n      const renderTree = createTree(\n        instance ? (shouldUpdate ? instance.render(props, instance.state) : ComponentCache.get(instance)) : newCtor(props)\n      );\n\n      console.log(renderTree && renderTree.nodeName);\n\n      if (!renderTree) { continue; }\n\n      renderTree.rawNodeName = newCtor;\n\n      // Remove any missing children.\n      renderTree.childNodes = renderTree.childNodes.filter(Boolean);\n\n      // Build a new tree from the render, and use this as the current tree.\n      newTree.childNodes[i] = renderTree;\n\n      // Cache this new current tree in both directions.\n      if (instance) {\n        ComponentCache.set(instance, renderTree);\n        ComponentCache.set(renderTree, instance);\n      }\n\n      // Recursively update trees.\n      reconcileComponents(oldChild, renderTree);\n    }\n    else if (newChild) {\n      reconcileComponents(oldChild, newChild);\n    }\n  }\n};\n\nfunction reactCompatibility(options = {}) {\n  const startReconcileComponents = transaction => {\n    reconcileComponents(transaction.state.oldTree, transaction.newTree);\n  };\n\n  let diffHTMLTasks = null;\n\n  function reactCompatibilityTask(transaction) {\n    // Use React Flow.\n    const { tasks } = transaction;\n    const index = tasks.indexOf(diffHTMLTasks.reconcileTrees);\n\n    // Inject after tree reconcilation.\n    transaction.tasks = tasks.splice(index + 1, 0, startReconcileComponents);\n\n    return () => {\n      ComponentCache.forEach((key, value) => {\n        value.componentDidMount && value.componentDidMount();\n        value.componentDidUpdate && value.componentDidUpdate(value.props, value.state);\n      });\n    };\n  }\n\n  const subscribe = ({ internals, tasks }) => {\n    diffHTMLTasks = tasks;\n    NodeCache = internals.NodeCache;\n  };\n\n  return assign(reactCompatibilityTask, { subscribe });\n}\n\nuse(reactCompatibility());\nuse(syntheticEvents());\n\nexports.createElement = (...args) => {\n  const tree = createTree(...args);\n\n  tree.$$typeof = Symbol.for('react.element');\n\n  const attributes = keys(tree.attributes);\n\n  if (attributes.includes('className')) {\n    tree.attributes.class = tree.attributes.className;\n  }\n\n  attributes.forEach(name => {\n    if (name.indexOf('on') === 0) {\n      tree.attributes[name.toLowerCase()] = tree.attributes[name];\n    }\n  });\n\n  return tree;\n};\n\nexports.Component = class Component {\n  constructor(props) {\n    const { constructor } = this;\n    const { defaultProps = {}, propTypes = {} } = constructor;\n\n    this.props = assign({}, props);\n    this.state = {};\n\n    Object.keys(defaultProps).forEach(prop => {\n      if (this.props[prop] === undefined) {\n        this.props[prop] = defaultProps[prop];\n      }\n    });\n\n    if (process.env.NODE_ENV !== 'production') {\n      Object.keys(propTypes).forEach(prop => {\n        const err = propTypes[prop](this.props, prop, constructor.name, 'prop');\n        if (err) { throw err; }\n      });\n    }\n  }\n\n  setState(newState) {\n    this.state = freeze(assign({}, this.state, newState));\n\n    if (this.shouldComponentUpdate()) {\n      outerHTML(\n        NodeCache.get(ComponentCache.get(this)),\n        this.render(this.props, this.state),\n        {\n          flow: reactFlow,\n        }\n      );\n    }\n  }\n\n  componentWillReceiveProps() {}\n  shouldComponentUpdate() { return true; }\n  componentWillUpdate() {}\n  componentDidUpdate() {}\n  componentWillMount() {}\n  componentDidMount() {}\n  componentWillUnmount() {}\n};\n\nexports.PropTypes = require('proptypes');\nexports.html = html;\nexports.render = (component, mount) => innerHTML(mount, component, );\nexports.isValidElement = function(object) {\n  return (\n    typeof object === 'object' &&\n    object !== null &&\n    object.$$typeof === Symbol.for('react.element')\n  );\n};\n"],"names":["assign","Object","freeze","keys","NodeCache","ComponentCache","Map","reactFlow","reconcileComponents","oldTree","newTree","i","childNodes","length","oldChild","newChild","splice","rawNodeName","oldChildNodes","oldCtor","newCtor","children","filter","Boolean","props","attributes","canNew","prototype","render","oldInstance","get","newInstance","instance","shouldUpdate","shouldComponentUpdate","state","renderTree","createTree","log","nodeName","set","reactCompatibility","options","startReconcileComponents","transaction","diffHTMLTasks","reactCompatibilityTask","tasks","index","indexOf","reconcileTrees","forEach","key","value","componentDidMount","componentDidUpdate","subscribe","internals","use","syntheticEvents","exports","createElement","tree","$$typeof","Symbol","for","includes","class","className","name","toLowerCase","Component","constructor","defaultProps","propTypes","prop","undefined","newState","PropTypes","require","html","component","mount","innerHTML","isValidElement","object"],"mappings":"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"}